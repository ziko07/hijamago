- content_for :extra_javascript do
  :javascript
    initIntercom();
    ST.initializeNewPaypalAccountHandler('ask_paypal_permissions', "#{order_permission_action}", '.js-paypal-redirect-order-permission');

- content_for :title do
  = t('admin2.sidebar.payment_system.paypal')

.content-card-header
  %h1.content-card-header-title
    = t('admin2.paypal.info_header')

.content-card-section-container
  - url = paypal_connected ? common_update_admin2_payment_system_paypal_index_path : '#'

  = form_for paypal_prefs_form, url: url, method: :patch, html: { class: %i[transaction_preferences_form content-card-section-form], remote: true } do |form|
    - if paypal_connected
      = hidden_field_tag 'payment_preferences_form[mode]', 'transaction_fee'
      = hidden_field_tag 'gateway', 'paypal'

    %section.content-card-section
      %h2= t('admin2.paypal.transaction_fee_settings')
      = render 'hint_title', paypal_connected: paypal_connected, paypal_enabled_by_admin: paypal_enabled_by_admin, paypal_allowed: paypal_allowed
      - if paypal_connected
        = render partial: 'form_paypal_connected', locals: local_assigns.merge(form: form)
      - else
        = render 'form_paypal', currency: currency
    %section#paypal-account-settings.content-card-section
      %h2= t('admin2.paypal.account_settings')
      - if paypal_allowed
        - if paypal_connected
          = render 'paypal_keys_connected', paypal_enabled_by_admin: paypal_enabled_by_admin, paypal_account: paypal_account, order_permission_action: order_permission_action
        - else
          = render 'paypal_keys', form: form
      - else
        = render 'admin2/payment_system/paypal/paypal_not_allowed'
        = link_to t('admin2.paypal.connect_paypal'), 'javascript:void(0);', class: %i[btn btn-secondary disabled]

    - if paypal_enabled_by_admin && paypal_connected
      %section.content-card-terminal
        = render 'admin2/submit_button', caption: t('admin2.save_changes')

- content_for :popup_layout do
  = render 'disable_paypal_popup'
